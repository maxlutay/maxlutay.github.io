{
  "_args": [
    [
      {
        "raw": "elm-webpack-loader@^4.3.0",
        "scope": null,
        "escapedName": "elm-webpack-loader",
        "name": "elm-webpack-loader",
        "rawSpec": "^4.3.0",
        "spec": ">=4.3.0 <5.0.0",
        "type": "range"
      },
      "C:\\github\\maxlutay.github.io"
    ]
  ],
  "_from": "elm-webpack-loader@>=4.3.0 <5.0.0",
  "_id": "elm-webpack-loader@4.3.1",
  "_inCache": true,
  "_location": "/elm-webpack-loader",
  "_nodeVersion": "6.8.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/elm-webpack-loader-4.3.1.tgz_1493581480054_0.06933289719745517"
  },
  "_npmUser": {
    "name": "enalicho",
    "email": "enalicho@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {
    "cross-spawn": "4.0.0",
    "find-elm-dependencies": "1.0.1",
    "temp": "0.8.3"
  },
  "_requested": {
    "raw": "elm-webpack-loader@^4.3.0",
    "scope": null,
    "escapedName": "elm-webpack-loader",
    "name": "elm-webpack-loader",
    "rawSpec": "^4.3.0",
    "spec": ">=4.3.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/elm-webpack-loader/-/elm-webpack-loader-4.3.1.tgz",
  "_shasum": "3a53c3f9a73209206bf38b365a1b0b80a2b3d4ea",
  "_shrinkwrap": null,
  "_spec": "elm-webpack-loader@^4.3.0",
  "_where": "C:\\github\\maxlutay.github.io",
  "author": {
    "name": "elm-community"
  },
  "bugs": {
    "url": "https://github.com/elm-community/elm-webpack-loader/issues"
  },
  "dependencies": {
    "elm": "^0.18.0",
    "glob": "^7.1.1",
    "loader-utils": "^1.0.2",
    "node-elm-compiler": "^4.2.1",
    "yargs": "^6.5.0"
  },
  "description": "Webpack loader for the Elm programming language.",
  "devDependencies": {
    "chai": "^3.4.1",
    "mocha": "3.0.2"
  },
  "directories": {},
  "dist": {
    "shasum": "3a53c3f9a73209206bf38b365a1b0b80a2b3d4ea",
    "tarball": "https://registry.npmjs.org/elm-webpack-loader/-/elm-webpack-loader-4.3.1.tgz"
  },
  "engines": {
    "node": ">=6.0.0"
  },
  "gitHead": "b9454e8a3dc8c265c503794be534d99b20f44b9a",
  "homepage": "https://github.com/elm-community/elm-webpack-loader",
  "keywords": [
    "elm",
    "webpack",
    "loader"
  ],
  "license": "BSD-3-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "enalicho",
      "email": "enalicho@gmail.com"
    },
    {
      "name": "rtfeldman",
      "email": "richard.t.feldman@gmail.com"
    }
  ],
  "name": "elm-webpack-loader",
  "optionalDependencies": {},
  "readme": "# Elm loader [![Version](https://img.shields.io/npm/v/elm-webpack-loader.svg)](https://www.npmjs.com/package/elm-webpack-loader) [![Travis build Status](https://travis-ci.org/elm-community/elm-webpack-loader.svg?branch=master)](http://travis-ci.org/elm-community/elm-webpack-loader) [![AppVeyor build status](https://ci.appveyor.com/api/projects/status/7a5ws36eenwpdvgc/branch/master?svg=true)](https://ci.appveyor.com/project/elm-community/elm-webpack-loader/branch/master)\n\n[Webpack](http://webpack.github.io/docs/) loader for the [Elm](http://elm-lang.org/) programming language.\n\nIt is aware of Elm dependencies and tracks them. This means that in `--watch`\nmode, if you `require` an Elm module from a Webpack entry point, not only will\nthat `.elm` file be watched for changes, but any other Elm modules it imports will\nbe watched for changes as well.\n\n## Installation\n\n```sh\n$ npm install --save elm-webpack-loader\n```\n\n\n## Usage\n\n#### Webpack 2\n\nDocumentation: [rules](https://webpack.js.org/configuration/module/#rule)\n\n`webpack.config.js`:\n\n```js\nmodule.exports = {\n  module: {\n    rules: [{\n      test: /\\.elm$/,\n      exclude: [/elm-stuff/, /node_modules/],\n      use: {\n        loader: 'elm-webpack-loader',\n        options: {}\n      }\n    }]\n  }\n};\n```\n\n#### Webpack 1\n\nDocumentation: [loaders](http://webpack.github.io/docs/using-loaders.html)\n\n`webpack.config.js`:\n\n```js\nmodule.exports = {\n  module: {\n    loaders: [{\n      test: /\\.elm$/,\n      exclude: [/elm-stuff/, /node_modules/],\n      loader: 'elm-webpack'\n    }]\n  }\n};\n```\n\nSee the [examples](#example) section below for the complete webpack configuration.\n\n### Options\n\n#### cwd (default null) *Recommended*\n\nYou can add `cwd=elmSource` to the loader:\n```js\nvar elmSource = __dirname + '/elm/path/in/project'\n  ...\n  loader: 'elm-webpack?cwd=' + elmSource\n  ...\n```\n\nYou can use this to specify a custom location within your project for your elm files. Note, this\nwill cause the compiler to look for **all** elm source files in the specified directory. This approach is recommended as it allows the compile to watch elm-package.json as well as every file in the source directories.\n\n#### maxInstances (default 1)\n\nYou can add `maxInstances=8` to the loader:\n\n```js\n  ...\n  loader: 'elm-webpack?maxInstances=8'\n  ...\n```\n\nSet a limit to the number of maxInstances of elm that can spawned. This should be set to a number less than the number of cores your machine has. The ideal number is 1, as it will prevent Elm instances causing deadlocks. \n\n#### Cache (default false)\n\nYou can add `cache=true` to the loader:\n\n```js\n  ...\n  loader: 'elm-webpack?cache=true'\n  ...\n```\n\nIf you add this, when using `npm run watch`, the loader will only load the\ndependencies at startup. This could be performance improvement, but know that\nnew files won't be picked up and so won't be watched until you restart webpack.\n\nThis flag doesn't matter if you don't use watch mode.\n\n#### ForceWatch (default false)\n\nThis loader will infer if you are running webpack in watch mode by checking\nthe webpack arguments. If you are running webpack programmatically and\nwants to force this behaviour you can add `forceWatch=true` to the loader:\n\n```js\n  ...\n  loader: 'elm-webpack?forceWatch=true'\n  ...\n```\n\n#### Upstream options\n\nAll options are sent down as an `options` object to node-elm-compiler. For example, you can explicitly pick the local `elm-make` binary by setting the option `pathToMake`:\n\n```js\n  ...\n  loader: 'elm-webpack?pathToMake=node_modules/.bin/elm-make',\n  ...\n```\n\nFor a list all possible options, [consult the source](https://github.com/rtfeldman/node-elm-compiler/blob/3fde73d/index.js#L12-L23).\n\n## Notes\n\n### Example\n\nYou can find an example in the `example` folder.\nTo run:\n\n```\nnpm install\nnpm run build\n```\n\nYou can have webpack watch for changes with: `npm run watch`\n\nYou can run the webpack dev server with: `npm run dev`\n\nFor a full featured example project that uses elm-webpack-loader see [pmdesgn/elm-webpack-starter](https://github.com/pmdesgn/elm-webpack-starter) .\n\n### noParse\n\nWebpack can complain about precompiled files (files compiled by `elm-make`).\nYou can silence this warning with [noParse](https://webpack.github.io/docs/configuration.html#module-noparse). You can see it in use in the example.\n\n```js\n  module: {\n    loaders: [...],\n    noParse: [/.elm$/]\n  }\n```\n\n## Revisions\n\n### 4.3.1\n\n- Fix a bug where maxInstances might end up being higher than expected\n\n### 4.3.0\n\n- Set maxInstances to 1\n- Patch watching behaviour \n- Add `forceWatch` to force watch mode\n\n### 4.2.0\n\nMake live reloading work more reliably\n\n### 4.1.0\n\nAdded `maxInstances` for limiting of instances\n\n### 4.0.0\n\nWatching is now done based on elm-package.json, faster startup time via @eeue56\n\n### 3.1.0\n\nAdd support for `--debug` via `node-elm-compiler`\n\n### 3.0.6\n\nAllow version bumps of node-elm-compiler.\n\n### 3.0.5\n\nUpgrade to latest node-elm-compiler, which fixes some dependency tracking issues.\n\n### 3.0.4\n\nFix potential race condition between dependency checking and compilation.\n\n### 3.0.3\n\nUse node-elm-compiler 4.0.1+ for important bugfix.\n\n### 3.0.2\n\nUse node-elm-compiler 4.0.0+\n\n### 3.0.1\n\nPass a real error object to webpack on failures.\n\n### 3.0.0\n\nSupport Elm 0.17, and remove obsolete `appendExport` option.\n\n### 2.0.0\n\nChange `warn` to be a pass-through compiler flag rather than a way to specify\nlogging behavior.\n\n### 1.0.0\n\nInitial stable release.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/elm-community/elm-webpack-loader.git"
  },
  "scripts": {
    "test": "mocha test/*.js"
  },
  "version": "4.3.1"
}
